# Use this values file after the initial GitHub app registration. This file needs the ATLANTIS_GH_APP_ID generated by the initial setup process.
# See initial_setup_values.yaml for the initial setup.

logLevel: "debug"

image:
  tag: procore-atlantis-v0.17.0-0.0.3-rc3

repoConfig: |
 ---
 repos:
 - id: /.*/
   workflow: workflow
   apply_requirements: [approved]
 workflows:
   workflow:
     plan:
       steps:
       - run: 'procore_terraform_wrapper.py --action init --tf-version=$ATLANTIS_TERRAFORM_VERSION'
       - run: 'procore_terraform_wrapper.py --action plan --tf-version=$ATLANTIS_TERRAFORM_VERSION --planfile=$PLANFILE --comment-args=$COMMENT_ARGS'
     apply:
       steps:
       - run: 'procore_terraform_wrapper.py --action apply --tf-version=$ATLANTIS_TERRAFORM_VERSION --planfile=$PLANFILE --comment-args=$COMMENT_ARGS'

orgWhitelist: github.com/procore/atlantis-test-repository

serviceAccount:
  name: atlantis
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::220696059325:role/atlantis-ops-role

environmentSecrets:
  - name: ATLANTIS_GH_WEBHOOK_SECRET
    secretKeyRef:
      name: atlantis-secret
      key: github_secret

environment:
  # Set the ATLANTIS_GH_APP_ID to the id generated by the initial app setup process.
  ATLANTIS_GH_APP_ID: 113837
  ATLANTIS_GH_APP_KEY_FILE: /atlantis_keys/gh_app_key_file.pem
  ATLANTIS_WRITE_GIT_CREDS: true
  ATLANTIS_ATLANTIS_URL: http://atlantis.procoretech-qa.com/
  ATLANTIS_SILENCE_ALLOWLIST_ERRORS: true

github: null

extraVolumes:
  - name: gh-app-key-file
    secret:
      secretName: atlantis-secret
      items:
        - key: github_key_file
          path: gh_app_key_file.pem

extraVolumeMounts:
  - mountPath: /atlantis_keys/
    name: gh-app-key-file
